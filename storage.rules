rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isSignedIn() && 
        firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Allow read access to all authenticated users
    match /{allPaths=**} {
      allow read: if isSignedIn();
    }

    // Products images
    match /products/{userId}/{allPaths=**} {
      allow write: if isSignedIn() && (
        isAdmin() || 
        (isOwner(userId) && request.resource.size < 5 * 1024 * 1024)
      );
    }

    // Tasks images
    match /tasks/{userId}/{allPaths=**} {
      allow write: if isSignedIn() && (
        isAdmin() || 
        (isOwner(userId) && request.resource.size < 5 * 1024 * 1024)
      );
    }
  }
}